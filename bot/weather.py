from dotenv import load_dotenv
import os
import requests
import datetime

load_dotenv()
WEATHER_API_TOKEN = os.getenv('WEATHER_API_KEY')


def get_weather(day):
    location = '–º–æ—Å–∫–≤–∞'
    today = datetime.date.today()
    tomorrow = today + datetime.timedelta(days=1)

    if day == "tomorrow":
        unix_timestamp = tomorrow.strftime('%s')
    else:
        unix_timestamp = ''

    url = f'http://api.openweathermap.org/data/2.5/forecast?q={location}' \
          f'&lang=ru&units=metric&appid={WEATHER_API_TOKEN}&dt={unix_timestamp}'

    response = requests.get(url)
    if response.status_code != 200:
        return '–û–®–ò–ë–ö–ê –ü–û–õ–£–ß–ï–ù–ò–Ø –ü–û–ì–û–î–´!'

    weather_data = response.json()
    city = weather_data['city']['name']
    cur_weather = ''
    weather_feels = ''
    weather_symbol = ''
    weather_description = ''
    wind = ""
    for data in weather_data['list']:
        if not unix_timestamp or data['dt'] == int(unix_timestamp):
            cur_weather = data['main']['temp']
            weather_feels = data['main']['feels_like']
            weather_symbol = data['weather'][0]['main']
            weather_description = data['weather'][0]['description']
            wind = data['wind']['speed']
            break

    code_to_smile = {
        "Clear": "‚òÄ",
        "Clouds": "‚òÅ",
        "Rain": "üåß",
        "Drizzle": "üå¶",
        "Snow": "‚ùÑ",
        "Thunderstorm": "‚õà",
    }

    if weather_symbol in code_to_smile:
        wd = code_to_smile[weather_symbol]
    else:
        wd = "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Ç–∞–º –∑–∞ –ø–æ–≥–æ–¥–∞..."

    return f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_weather} ¬∞C / –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {weather_feels} ¬∞C" \
           f"\n{weather_description.capitalize()} {wd}\n–í–µ—Ç–µ—Ä: {wind} –º/—Å \n"
